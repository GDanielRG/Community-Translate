<?php

	namespace App\Http;

	use App\Key;
	use App\TranslationPetition;

	/**
	* 
	*/
	class ReceivedPetitionFunctions extends GlobalFunctions
	{
		
		protected $user;
		protected $payload;
		protected $service;
		protected $serviceId;

		function __construct($service, $userId, $payload)
		{
			$key = Key::where('key', $userId)->where('name', $service)->first();
			$this->user = $key ? $key->user : null;
			$this->payload = $payload;
			$this->service = $service;
			$this->serviceId = $userId;
		}
		
		public function sendAnswer()
		{

			$text = $this->payload;

			if($this->user){

				$petition = $this->user->translationPetitions()->where('closed', false)->first();
				$petition->translationAnswers()->save(new TranslationAnswer(["translation" => $text]));
				$petition->closed = true;
				$petition->save();


				$message = new Message(['message' => trans('reply_label').' '.$petition->language->name." : ".$text]);
				$targetUserId = $petition->translationRequest()->user();

				$targetUserId->messages()->save($message);

				$this->close();

			}
		}

	}